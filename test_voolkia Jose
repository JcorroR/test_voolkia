import requests
import logging  # libreria que ayuda al formato del log posterior


def getSellerItems(seller_id, site_id):

    try:
        seller_list = requests.get(f"https://api.mercadolibre.com/sites/{site_id}/search?seller_id={str(seller_id)}")
        if seller_list.status_code != 200:
            raise requests.exceptions.InvalidURL
    except requests.exceptions.InvalidURL as e:
        print(f"Error while trying to reach the site.\nStatus code <{seller_list.status_code}> ")
        raise SystemExit(e)

    items = seller_list.json()['results']

    logging.basicConfig(level=logging.DEBUG,
                        format='%(asctime)s â€” %(message)s',
                        datefmt='%Y-%m-%d_%H:%M:%S',
                        handlers=[logging.FileHandler('seller_info.log', encoding='utf-8')])

    product = {}

    for item in items:

        catqry = requests.get("https://api.mercadolibre.com/categories/{}".format(item['category_id'])).json()

        product = {
            'id': item['id'],
            'title': item['title'],
            'category_id': item['category_id'],
            'name': catqry['name']
        }
        print(product)
        logging.info(product)

    return 0

#if __name__ == "__main__":
#   getSellerItems(179571326, "MLA")

site_id = ""
seller_id = ""
site_id = input("Site id: ")
seller_id = input("seller id: ")
if site_id != "" and seller_id != "":
    getSellerItems(seller_id, site_id)
else:
    print("No found value")

